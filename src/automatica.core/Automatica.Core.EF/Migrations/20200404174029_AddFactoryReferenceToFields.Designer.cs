// <auto-generated />
using System;
using Automatica.Core.EF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Automatica.Core.EF.Migrations
{
    [DbContext(typeof(AutomaticaContext))]
    [Migration("20200404174029_AddFactoryReferenceToFields")]
    partial class AddFactoryReferenceToFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Automatica.Core.EF.Models.Areas.AreaInstance", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("This2AreaTemplate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2Parent")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2UserGroup")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2AreaTemplate");

                    b.HasIndex("This2Parent");

                    b.HasIndex("This2UserGroup");

                    b.ToTable("AreaInstances");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Areas.AreaTemplate", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleteable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<Guid>("NeedsThis2AreaType")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProvidesThis2AreayType")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2AreaType")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("NeedsThis2AreaType");

                    b.HasIndex("ProvidesThis2AreayType");

                    b.HasIndex("This2AreaType");

                    b.ToTable("AreaTemplates");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Areas.AreaType", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("ObjId");

                    b.ToTable("AreaTypes");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.BoardInterface", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Meta")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<Guid>("This2BoardType")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2InterfaceType")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2BoardType");

                    b.HasIndex("This2InterfaceType");

                    b.ToTable("BoardInterfaces");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.BoardType", b =>
                {
                    b.Property<Guid>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("Type");

                    b.ToTable("BoardTypes");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Categories.CategoryGroup", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("ObjId");

                    b.ToTable("CategoryGroups");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Categories.CategoryInstance", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128)
                        .HasDefaultValue("rgba(255, 255, 255, 1)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleteable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsFavorite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("This2CategoryGroup")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2UserGroup")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2CategoryGroup");

                    b.HasIndex("This2UserGroup");

                    b.ToTable("CategoryInstances");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.InterfaceType", b =>
                {
                    b.Property<Guid>("Type")
                        .HasColumnType("TEXT");

                    b.Property<bool>("CanProvideBoardType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<Guid>("FactoryReference")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDriverInterface")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<int>("MaxChilds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxInstances")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("Type");

                    b.ToTable("InterfaceTypes");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Link", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("This2NodeInstance2RulePageInput")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2NodeInstance2RulePageOutput")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2RuleInterfaceInstanceInput")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2RuleInterfaceInstanceOutput")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2RulePage")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2NodeInstance2RulePageInput");

                    b.HasIndex("This2NodeInstance2RulePageOutput");

                    b.HasIndex("This2RuleInterfaceInstanceInput");

                    b.HasIndex("This2RuleInterfaceInstanceOutput");

                    b.HasIndex("This2RulePage");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.NodeDataType", b =>
                {
                    b.Property<long>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("Type");

                    b.ToTable("NodeDataTypes");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.NodeInstance", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReadable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsWriteable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StateColorValueFalse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("rgba(0, 0, 0, 1)");

                    b.Property<string>("StateColorValueTrue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("rgba(0, 0, 0, 1)");

                    b.Property<string>("StateTextValueFalse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("0");

                    b.Property<string>("StateTextValueTrue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("1");

                    b.Property<Guid?>("This2AreaInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2CategoryInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2NodeTemplate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2ParentNodeInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2Slave")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2UserGroup")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Trending")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrendingInterval")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TrendingToCloud")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrendingType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseInVisu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("VisuName")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2AreaInstance");

                    b.HasIndex("This2CategoryInstance");

                    b.HasIndex("This2NodeTemplate");

                    b.HasIndex("This2ParentNodeInstance");

                    b.HasIndex("This2Slave");

                    b.HasIndex("This2UserGroup");

                    b.ToTable("NodeInstances");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.NodeInstance2RulePage", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<Guid>("This2NodeInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2RulePage")
                        .HasColumnType("TEXT");

                    b.Property<float>("X")
                        .HasColumnType("REAL");

                    b.Property<float>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("ObjId");

                    b.HasIndex("This2NodeInstance");

                    b.HasIndex("This2RulePage");

                    b.ToTable("NodeInstance2RulePages");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.NodeTemplate", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DefaultCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<Guid>("FactoryReference")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsAdapterInterface")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleteable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsReadable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsReadableFixed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsWriteable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsWriteableFixed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("MaxInstances")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("NameMeta")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("NeedsInterface2InterfacesType")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProvidesInterface2InterfaceType")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2DefaultMobileVisuTemplate")
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new Guid("16780dfd-887a-4a0a-9b2a-4d62ccc32c93"));

                    b.Property<long>("This2NodeDataType")
                        .HasColumnType("INTEGER");

                    b.HasKey("ObjId");

                    b.HasIndex("NeedsInterface2InterfacesType");

                    b.HasIndex("ProvidesInterface2InterfaceType");

                    b.HasIndex("This2DefaultMobileVisuTemplate");

                    b.HasIndex("This2NodeDataType");

                    b.ToTable("NodeTemplates");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Plugin", b =>
                {
                    b.Property<Guid?>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AzureFileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AzureUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComponentName")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsPrerelease")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Loaded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MinCoreServerVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PluginGuid")
                        .HasColumnType("TEXT");

                    b.Property<int>("PluginType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.ToTable("Plugins");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.PropertyInstance", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("This2NodeInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2PropertyTemplate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2VisuObjectInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ValueAreaInstance")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ValueBool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("ValueCategoryInstance")
                        .HasColumnType("TEXT");

                    b.Property<double?>("ValueDouble")
                        .HasColumnType("REAL");

                    b.Property<int?>("ValueInt")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ValueLong")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ValueNodeInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ValueRulePage")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ValueSlave")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueString")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ValueVisuPage")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2NodeInstance");

                    b.HasIndex("This2PropertyTemplate");

                    b.HasIndex("This2VisuObjectInstance");

                    b.HasIndex("ValueAreaInstance");

                    b.HasIndex("ValueCategoryInstance");

                    b.HasIndex("ValueNodeInstance");

                    b.HasIndex("ValueRulePage");

                    b.HasIndex("ValueSlave");

                    b.HasIndex("ValueVisuPage");

                    b.ToTable("PropertyInstances");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.PropertyTemplate", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<Guid>("FactoryReference")
                        .HasColumnType("TEXT");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("GroupOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsReadonly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Meta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("Order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValueSql("1");

                    b.Property<Guid?>("This2NodeTemplate")
                        .HasColumnType("TEXT")
                        .HasDefaultValue(null);

                    b.Property<long>("This2PropertyType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("This2VisuObjectTemplate")
                        .HasColumnType("TEXT")
                        .HasDefaultValue(null);

                    b.HasKey("ObjId");

                    b.HasIndex("This2NodeTemplate");

                    b.HasIndex("This2PropertyType");

                    b.HasIndex("This2VisuObjectTemplate");

                    b.ToTable("PropertyTemplates");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.PropertyTemplateConstraint", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("ConstraintLevel")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ConstraintType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<Guid>("This2PropertyTemplate")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2PropertyTemplate");

                    b.ToTable("PropertyTemplateConstraints");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.PropertyTemplateConstraintData", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("ConditionType")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Factor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Offset")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PropertyKey")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2PropertyTemplateConstraint")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2PropertyTemplateConstraint");

                    b.ToTable("PropertyTemplateConstraintData");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.PropertyType", b =>
                {
                    b.Property<long>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Meta")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("Type");

                    b.ToTable("PropertyTypes");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RuleInstance", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("This2AreaInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2CategoryInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2RulePage")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2RuleTemplate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("This2UserGroup")
                        .HasColumnType("TEXT");

                    b.Property<bool>("UseInVisu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<float>("X")
                        .HasColumnType("REAL");

                    b.Property<float>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("ObjId");

                    b.HasIndex("This2AreaInstance");

                    b.HasIndex("This2CategoryInstance");

                    b.HasIndex("This2RulePage");

                    b.HasIndex("This2RuleTemplate");

                    b.HasIndex("This2UserGroup");

                    b.ToTable("RuleInstances");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RuleInterfaceDirection", b =>
                {
                    b.Property<long>("ObjId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("ObjId");

                    b.ToTable("RuleInterfaceDirections");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RuleInterfaceInstance", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<Guid>("This2RuleInstance")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2RuleInterfaceTemplate")
                        .HasColumnType("TEXT");

                    b.Property<double?>("ValueDouble")
                        .HasColumnType("REAL");

                    b.Property<long?>("ValueInteger")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueString")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2RuleInstance");

                    b.HasIndex("This2RuleInterfaceTemplate");

                    b.ToTable("RuleInterfaceInstances");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RuleInterfaceTemplate", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<int>("InterfaceType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLinkableParameter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxLinks")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("ParameterDataType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<long>("This2RuleInterfaceDirection")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("This2RuleTemplate")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.HasIndex("This2RuleInterfaceDirection");

                    b.HasIndex("This2RuleTemplate");

                    b.ToTable("RuleInterfaceTemplates");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RulePage", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<long>("This2RulePageType")
                        .HasColumnType("INTEGER");

                    b.HasKey("ObjId");

                    b.HasIndex("This2RulePageType");

                    b.ToTable("RulePages");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RulePageType", b =>
                {
                    b.Property<long>("ObjId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("ObjId");

                    b.ToTable("RulePageTypes");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RuleTemplate", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<float>("Height")
                        .HasColumnType("REAL");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<Guid>("This2DefaultMobileVisuTemplate")
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new Guid("16780dfd-887a-4a0a-9b2a-4d62ccc32c93"));

                    b.Property<float>("Width")
                        .HasColumnType("REAL");

                    b.HasKey("ObjId");

                    b.HasIndex("This2DefaultMobileVisuTemplate");

                    b.ToTable("RuleTemplates");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Setting", b =>
                {
                    b.Property<long>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Group")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("System");

                    b.Property<bool>("IsReadonly")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("ValueDouble")
                        .HasColumnType("REAL");

                    b.Property<int?>("ValueInt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueText")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Slave", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjId");

                    b.ToTable("Slaves");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Trendings.Trending", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<Guid>("This2NodeInstance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("ObjId");

                    b.HasIndex("This2NodeInstance");

                    b.ToTable("Trendings");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.VersionInformation", b =>
                {
                    b.Property<long>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("DriverGuid")
                        .HasColumnType("TEXT")
                        .HasMaxLength(36);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<Guid>("RuleGuid")
                        .HasColumnType("TEXT")
                        .HasMaxLength(36);

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("ObjId");

                    b.ToTable("VersionInformations");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.VisuObjectInstance", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<float>("Height")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("This2UserGroup")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2VisuObjectTemplate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2VisuPage")
                        .HasColumnType("TEXT");

                    b.Property<float>("Width")
                        .HasColumnType("REAL");

                    b.Property<float>("X")
                        .HasColumnType("REAL");

                    b.Property<float>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("ObjId");

                    b.HasIndex("This2UserGroup");

                    b.HasIndex("This2VisuObjectTemplate");

                    b.HasIndex("This2VisuPage");

                    b.ToTable("VisuObjectInstances");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.VisuObjectTemplate", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<float>("Height")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsVisibleForUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<float?>("MaxHeight")
                        .HasColumnType("REAL");

                    b.Property<float?>("MaxWidth")
                        .HasColumnType("REAL");

                    b.Property<float?>("MinHeight")
                        .HasColumnType("REAL");

                    b.Property<float?>("MinWidth")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<long>("This2VisuPageType")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Width")
                        .HasColumnType("REAL");

                    b.HasKey("ObjId");

                    b.HasIndex("This2VisuPageType");

                    b.ToTable("VisuObjectTemplates");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.VisuPage", b =>
                {
                    b.Property<Guid>("ObjId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DefaultPage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<double>("Height")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(4.0);

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("This2UserGroup")
                        .HasColumnType("TEXT");

                    b.Property<long>("This2VisuPageType")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Width")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(6.0);

                    b.HasKey("ObjId");

                    b.HasIndex("ObjId");

                    b.HasIndex("This2UserGroup");

                    b.HasIndex("This2VisuPageType")
                        .HasDatabaseName("This2VisuPageType");

                    b.ToTable("VisuPages");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.VisuPageType", b =>
                {
                    b.Property<long>("ObjId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.HasKey("ObjId");

                    b.ToTable("VisuPageTypes");
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.Priviledge", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.HasKey("ObjId");

                    b.ToTable("Priviledges");
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.Priviledge2Role", b =>
                {
                    b.Property<Guid>("This2Role")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2Priviledge")
                        .HasColumnType("TEXT");

                    b.HasKey("This2Role");

                    b.HasIndex("This2Priviledge");

                    b.ToTable("Priviledge2Roles");
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.Role", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleteable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.HasKey("ObjId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.User", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.HasKey("ObjId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.User2Group", b =>
                {
                    b.Property<Guid>("This2User")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2UserGroup")
                        .HasColumnType("TEXT");

                    b.HasKey("This2User", "This2UserGroup");

                    b.HasIndex("This2UserGroup");

                    b.ToTable("User2Groups");
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.User2Role", b =>
                {
                    b.Property<Guid>("This2User")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2Role")
                        .HasColumnType("TEXT");

                    b.HasKey("This2User", "This2Role");

                    b.HasIndex("This2Role");

                    b.ToTable("User2Roles");
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.UserGroup", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.HasKey("ObjId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.UserGroup2Role", b =>
                {
                    b.Property<Guid>("This2UserGroup")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("This2Role")
                        .HasColumnType("TEXT");

                    b.HasKey("This2UserGroup", "This2Role");

                    b.HasIndex("This2Role");

                    b.ToTable("UserGroup2Roles");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Areas.AreaInstance", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.Areas.AreaTemplate", "This2AreaTemplateNavigation")
                        .WithMany()
                        .HasForeignKey("This2AreaTemplate")
                        .HasConstraintName("FK_AreaInstance_This2AreaTemplateNavigation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.Areas.AreaInstance", "This2ParentNavigation")
                        .WithMany("InverseThis2ParentNavigation")
                        .HasForeignKey("This2Parent")
                        .HasConstraintName("FK_AreaInstance_This2ParentNavigation")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automatica.Core.Model.Models.User.UserGroup", "This2UserGroupNavigation")
                        .WithMany()
                        .HasForeignKey("This2UserGroup")
                        .HasConstraintName("FK_AreaInstance_This2UserGroup")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Areas.AreaTemplate", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.Areas.AreaType", "NeedsThis2AreaTypeNavigation")
                        .WithMany()
                        .HasForeignKey("NeedsThis2AreaType")
                        .HasConstraintName("FK_AreaTemplate_NeedsThis2AreaTypeNavigation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.Areas.AreaType", "ProvidesThis2AreayTypeNavigation")
                        .WithMany()
                        .HasForeignKey("ProvidesThis2AreayType")
                        .HasConstraintName("FK_AreaTemplate_ProvidesThis2AreayTypeNavigation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.Areas.AreaType", "This2AreaTypeNavigation")
                        .WithMany()
                        .HasForeignKey("This2AreaType")
                        .HasConstraintName("FK_AreaTemplate_AreaType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.BoardInterface", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.BoardType", "This2BoardTypeNavigation")
                        .WithMany("BoardInterface")
                        .HasForeignKey("This2BoardType")
                        .HasConstraintName("BoardInterface_ibfk_1")
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.InterfaceType", "This2InterfaceTypeNavigation")
                        .WithMany()
                        .HasForeignKey("This2InterfaceType")
                        .HasConstraintName("BoardInterface_ibfk_2")
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Categories.CategoryInstance", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.Categories.CategoryGroup", "This2CategoryGroupNavigation")
                        .WithMany()
                        .HasForeignKey("This2CategoryGroup")
                        .HasConstraintName("FK_CategoryInstance_This2CategoryGroupNavigation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Automatica.Core.Model.Models.User.UserGroup", "This2UserGroupNavigation")
                        .WithMany()
                        .HasForeignKey("This2UserGroup")
                        .HasConstraintName("FK_CategoryInstance_This2UserGroup")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Link", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.NodeInstance2RulePage", "This2NodeInstance2RulePageInputNavigation")
                        .WithMany()
                        .HasForeignKey("This2NodeInstance2RulePageInput")
                        .HasConstraintName("Link_ibfk_2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.NodeInstance2RulePage", "This2NodeInstance2RulePageOutputNavigation")
                        .WithMany()
                        .HasForeignKey("This2NodeInstance2RulePageOutput")
                        .HasConstraintName("Link_ibfk_5")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.RuleInterfaceInstance", "This2RuleInterfaceInstanceInputNavigation")
                        .WithMany()
                        .HasForeignKey("This2RuleInterfaceInstanceInput")
                        .HasConstraintName("Link_ibfk_3")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.RuleInterfaceInstance", "This2RuleInterfaceInstanceOutputNavigation")
                        .WithMany()
                        .HasForeignKey("This2RuleInterfaceInstanceOutput")
                        .HasConstraintName("Link_ibfk_4")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.RulePage", "This2RulePageNavigation")
                        .WithMany("Link")
                        .HasForeignKey("This2RulePage")
                        .HasConstraintName("Link_ibfk_1")
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.NodeInstance", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.Areas.AreaInstance", "This2AreaInstanceNavigation")
                        .WithMany()
                        .HasForeignKey("This2AreaInstance")
                        .HasConstraintName("NodeInstance_This2AreaInstance");

                    b.HasOne("Automatica.Core.EF.Models.Categories.CategoryInstance", "This2CategoryInstanceNavigation")
                        .WithMany()
                        .HasForeignKey("This2CategoryInstance")
                        .HasConstraintName("NodeInstance_This2CategoryInstance");

                    b.HasOne("Automatica.Core.EF.Models.NodeTemplate", "This2NodeTemplateNavigation")
                        .WithMany()
                        .HasForeignKey("This2NodeTemplate")
                        .HasConstraintName("NodeInstance_ibfk_2");

                    b.HasOne("Automatica.Core.EF.Models.NodeInstance", "This2ParentNodeInstanceNavigation")
                        .WithMany("InverseThis2ParentNodeInstanceNavigation")
                        .HasForeignKey("This2ParentNodeInstance")
                        .HasConstraintName("NodeInstance_ibfk_3")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.Slave", "This2SlaveNavigation")
                        .WithMany()
                        .HasForeignKey("This2Slave")
                        .HasConstraintName("NodeInstance_This2Slave");

                    b.HasOne("Automatica.Core.Model.Models.User.UserGroup", "This2UserGroupNavigation")
                        .WithMany()
                        .HasForeignKey("This2UserGroup")
                        .HasConstraintName("NodeInstance_This2UserGroup")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.NodeInstance2RulePage", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.NodeInstance", "This2NodeInstanceNavigation")
                        .WithMany("NodeInstance2RulePage")
                        .HasForeignKey("This2NodeInstance")
                        .HasConstraintName("NodeInstance2RulePage_ibfk_2")
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.RulePage", "This2RulePageNavigation")
                        .WithMany("NodeInstance2RulePage")
                        .HasForeignKey("This2RulePage")
                        .HasConstraintName("NodeInstance2RulePage_ibfk_1")
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.NodeTemplate", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.InterfaceType", "NeedsInterface2InterfacesTypeNavigation")
                        .WithMany()
                        .HasForeignKey("NeedsInterface2InterfacesType")
                        .HasConstraintName("NodeTemplate_ibfk_1")
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.InterfaceType", "ProvidesInterface2InterfaceTypeNavigation")
                        .WithMany()
                        .HasForeignKey("ProvidesInterface2InterfaceType")
                        .HasConstraintName("NodeTemplate_ibfk_2")
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.VisuObjectTemplate", "THis2DefaultMobileVisuTemplateNavigation")
                        .WithMany()
                        .HasForeignKey("This2DefaultMobileVisuTemplate")
                        .HasConstraintName("NodeTemplate_DefaultVisuMobileTemplate")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.NodeDataType", "This2NodeDataTypeNavigation")
                        .WithMany()
                        .HasForeignKey("This2NodeDataType")
                        .HasConstraintName("NodeTemplate_ibfk_3")
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.PropertyInstance", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.NodeInstance", "This2NodeInstanceNavigation")
                        .WithMany("PropertyInstance")
                        .HasForeignKey("This2NodeInstance")
                        .HasConstraintName("PropertyInstance_ibfk_2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.PropertyTemplate", "This2PropertyTemplateNavigation")
                        .WithMany()
                        .HasForeignKey("This2PropertyTemplate")
                        .HasConstraintName("PropertyInstance_ibfk_1")
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.VisuObjectInstance", "This2VisuObjectInstanceNavigation")
                        .WithMany("PropertyInstance")
                        .HasForeignKey("This2VisuObjectInstance")
                        .HasConstraintName("PropertyInstance_VisuObjectInstance_ibfk_3")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.Areas.AreaInstance", "ValueAreaInstanceNavigation")
                        .WithMany()
                        .HasForeignKey("ValueAreaInstance")
                        .HasConstraintName("PropertyInstance_AreaInstance_ValueAreaInstance")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.Categories.CategoryInstance", "ValueCategoryInstanceNavigation")
                        .WithMany()
                        .HasForeignKey("ValueCategoryInstance")
                        .HasConstraintName("PropertyInstance_CategoryInstance_ValueCategoryInstance")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.NodeInstance", "ValueNodeInstanceNavigation")
                        .WithMany()
                        .HasForeignKey("ValueNodeInstance")
                        .HasConstraintName("PropertyInstance_NodeInstance_ValueNodeInstance")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Automatica.Core.EF.Models.RulePage", "ValueRulePageNavigation")
                        .WithMany()
                        .HasForeignKey("ValueRulePage")
                        .HasConstraintName("PropertyInstance_RulePage_ValueRulePage")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Automatica.Core.EF.Models.Slave", "ValueSlaveNavigation")
                        .WithMany()
                        .HasForeignKey("ValueSlave")
                        .HasConstraintName("PropertyInstance_Slave_ValueSlave");

                    b.HasOne("Automatica.Core.EF.Models.VisuPage", "ValueVisuPageNavigation")
                        .WithMany()
                        .HasForeignKey("ValueVisuPage")
                        .HasConstraintName("PropertyInstance_VisuPage_ValueVisuPage")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.PropertyTemplate", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.NodeTemplate", "This2NodeTemplateNavigation")
                        .WithMany("PropertyTemplate")
                        .HasForeignKey("This2NodeTemplate")
                        .HasConstraintName("PropertyTemplate_ibfk_2");

                    b.HasOne("Automatica.Core.EF.Models.PropertyType", "This2PropertyTypeNavigation")
                        .WithMany()
                        .HasForeignKey("This2PropertyType")
                        .HasConstraintName("PropertyTemplate_ibfk_1")
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.VisuObjectTemplate", "This2VisuObjectTemplateNavigation")
                        .WithMany("PropertyTemplate")
                        .HasForeignKey("This2VisuObjectTemplate")
                        .HasConstraintName("PropertyTemplate_ibfk_3");
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.PropertyTemplateConstraint", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.PropertyTemplate", "This2PropertyTemplateNavigation")
                        .WithMany("Constraints")
                        .HasForeignKey("This2PropertyTemplate")
                        .HasConstraintName("PropertyTemplateConstraint_PropertyTemplate_Navigation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.PropertyTemplateConstraintData", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.PropertyTemplateConstraint", "This2PropertyTemplateConstraintNavigation")
                        .WithMany("ConstraintData")
                        .HasForeignKey("This2PropertyTemplateConstraint")
                        .HasConstraintName("This2PropertyTemplateConstraintNavigation_PropertyTemplate_Navigation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RuleInstance", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.Areas.AreaInstance", "This2AreaInstanceNavigation")
                        .WithMany()
                        .HasForeignKey("This2AreaInstance")
                        .HasConstraintName("RuleInstance_This2AreaInstance");

                    b.HasOne("Automatica.Core.EF.Models.Categories.CategoryInstance", "This2CategoryInstanceNavigation")
                        .WithMany()
                        .HasForeignKey("This2CategoryInstance")
                        .HasConstraintName("RuleInstance_This2CategoryInstance");

                    b.HasOne("Automatica.Core.EF.Models.RulePage", "This2RulePageNavigation")
                        .WithMany("RuleInstance")
                        .HasForeignKey("This2RulePage")
                        .HasConstraintName("RuleInstance_ibfk_2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.RuleTemplate", "This2RuleTemplateNavigation")
                        .WithMany()
                        .HasForeignKey("This2RuleTemplate")
                        .HasConstraintName("RuleInstance_ibfk_1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Automatica.Core.Model.Models.User.UserGroup", "This2UserGroupNavigation")
                        .WithMany()
                        .HasForeignKey("This2UserGroup")
                        .HasConstraintName("RuleInstance_This2UserGroup")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RuleInterfaceInstance", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.RuleInstance", "This2RuleInstanceNavigation")
                        .WithMany("RuleInterfaceInstance")
                        .HasForeignKey("This2RuleInstance")
                        .HasConstraintName("RuleInterfaceInstance_ibfk_1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.RuleInterfaceTemplate", "This2RuleInterfaceTemplateNavigation")
                        .WithMany()
                        .HasForeignKey("This2RuleInterfaceTemplate")
                        .HasConstraintName("RuleInterfaceInstance_ibfk_2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RuleInterfaceTemplate", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.RuleInterfaceDirection", "This2RuleInterfaceDirectionNavigation")
                        .WithMany()
                        .HasForeignKey("This2RuleInterfaceDirection")
                        .HasConstraintName("RuleInterfaceTemplate_ibfk_2")
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.RuleTemplate", "This2RuleTemplateNavigation")
                        .WithMany("RuleInterfaceTemplate")
                        .HasForeignKey("This2RuleTemplate")
                        .HasConstraintName("RuleInterfaceTemplate_ibfk_1")
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RulePage", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.RulePageType", "This2RulePageTypeNavigation")
                        .WithMany()
                        .HasForeignKey("This2RulePageType")
                        .HasConstraintName("RulePage_ibfk_1")
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.RuleTemplate", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.VisuObjectTemplate", "This2DefaultMobileVisuTemplateNavigation")
                        .WithMany()
                        .HasForeignKey("This2DefaultMobileVisuTemplate")
                        .HasConstraintName("RuleTemplate_DefaultVisuMobileTemplate")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.Trendings.Trending", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.NodeInstance", "This2NodeInstanceNavigation")
                        .WithMany()
                        .HasForeignKey("This2NodeInstance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.VisuObjectInstance", b =>
                {
                    b.HasOne("Automatica.Core.Model.Models.User.UserGroup", "This2UserGroupNavigation")
                        .WithMany()
                        .HasForeignKey("This2UserGroup")
                        .HasConstraintName("VisuObjectInstance_This2UserGroup")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.VisuObjectTemplate", "This2VisuObjectTemplateNavigation")
                        .WithMany()
                        .HasForeignKey("This2VisuObjectTemplate")
                        .HasConstraintName("VisuObjectInstance_ibfk_1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Automatica.Core.EF.Models.VisuPage", "This2VisuPageNavigation")
                        .WithMany("VisuObjectInstances")
                        .HasForeignKey("This2VisuPage")
                        .HasConstraintName("VisuObjectInstance_ibfk_2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.VisuObjectTemplate", b =>
                {
                    b.HasOne("Automatica.Core.EF.Models.VisuPageType", "This2VisuPageTypeNavigation")
                        .WithMany()
                        .HasForeignKey("This2VisuPageType")
                        .HasConstraintName("FK_VisuObjectTemplates_VisuPageTypes_VisuPageTypeObjId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.EF.Models.VisuPage", b =>
                {
                    b.HasOne("Automatica.Core.Model.Models.User.UserGroup", "This2UserGroupNavigation")
                        .WithMany()
                        .HasForeignKey("This2UserGroup")
                        .HasConstraintName("VisuPage_This2UserGroup")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automatica.Core.EF.Models.VisuPageType", "This2VisuPageTypeNavigation")
                        .WithMany()
                        .HasForeignKey("This2VisuPageType")
                        .HasConstraintName("VisuPage_ibfk_1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.Priviledge2Role", b =>
                {
                    b.HasOne("Automatica.Core.Model.Models.User.Priviledge", "This2PriviledgeNavigation")
                        .WithMany("InverseThis2Roles")
                        .HasForeignKey("This2Priviledge")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Automatica.Core.Model.Models.User.Role", "This2RoleNavigation")
                        .WithMany("InverseThis2Priviledges")
                        .HasForeignKey("This2Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.User2Group", b =>
                {
                    b.HasOne("Automatica.Core.Model.Models.User.User", "This2UserNavigation")
                        .WithMany("InverseThis2UserGroups")
                        .HasForeignKey("This2User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Automatica.Core.Model.Models.User.UserGroup", "This2UserGroupNavigation")
                        .WithMany("InverseThis2Users")
                        .HasForeignKey("This2UserGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.User2Role", b =>
                {
                    b.HasOne("Automatica.Core.Model.Models.User.Role", "This2RoleNavigation")
                        .WithMany()
                        .HasForeignKey("This2Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Automatica.Core.Model.Models.User.User", "This2UserNavigation")
                        .WithMany("InverseThis2Roles")
                        .HasForeignKey("This2User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Automatica.Core.Model.Models.User.UserGroup2Role", b =>
                {
                    b.HasOne("Automatica.Core.Model.Models.User.Role", "This2RoleNavigation")
                        .WithMany()
                        .HasForeignKey("This2Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Automatica.Core.Model.Models.User.UserGroup", "This2UserGroupNavigation")
                        .WithMany("InverseThis2Roles")
                        .HasForeignKey("This2UserGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
