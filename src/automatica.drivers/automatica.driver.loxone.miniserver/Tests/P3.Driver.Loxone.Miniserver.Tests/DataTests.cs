using P3.Driver.Loxone.Miniserver.Driver.Data.Message;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Xunit;

namespace P3.Driver.Loxone.Miniserver.Tests
{
    public class DataTests
    {
        [Fact]
        public void TestUuidParsing()
        {
            var binary = new byte[] { 16, 65, 38, 22, 1, 146, 7, 66, 255, 255, 201, 38, 162, 106, 141, 33 };

            var loxUuid = new LoxoneUuid(binary);

            Assert.Equal("16264110-9201-4207-ffffc926a26a8d21", loxUuid.Uuid.ToLower());
        }

        [Fact]
        public void TestUuidParsingInvalidInput()
        {
            var binary = new byte[] { 16, 65, 38, 22, 1, 146, 7, 66, 255, 255, 201, 38 };

            Assert.Throws<ArgumentException>(() => new LoxoneUuid(binary));
        }
        [Fact]
        public void TestUuidParsingInvalidInput2()
        {
            var binary = new byte[] { 16, 65, 38, 22, 1, 146, 7, 66, 255, 255, 201, 38, 16, 65, 38, 22, 1, 146, 7, 66, 255, 255, 201, 38 };

            Assert.Throws<ArgumentException>(() => new LoxoneUuid(binary));
        }

        [Fact]
        public void TestWeatherEntryParseFail1()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray("FFFFFF40F95912010000002801000003000000370000000000000000002A40CDCCCCCCCCCC2540E8034EEFA9DA10400000000000000000CDCCCCCCCCCC0C4000000000000C9040");

            Assert.Throws<ArgumentException>(() => WeatherEntry.Parse(demoData));
        }
        [Fact]
        public void TestWeatherEntryParseFail2()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray("010000002801000003000000370000000000000000002A40CDCCCCCCCCCC2540E8034EEFA9DA10400000000000000000CDCCCCCCCCCC0C4000000000000C9040");

            Assert.Throws<ArgumentException>(() => WeatherEntry.Parse(demoData));
        }

        [Fact]
        public void TestWeatherEntryParse()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray("40F95912010000002801000003000000370000000000000000002A40CDCCCCCCCCCC2540E8034EEFA9DA10400000000000000000CDCCCCCCCCCC0C4000000000000C9040");

            var weather = WeatherEntry.Parse(demoData);

            Assert.NotNull(weather);

            Assert.Equal(1027, weather.BarometicPressure);
            Assert.Equal(4.2, Math.Round(weather.DewPoint, 1));
            Assert.Equal(10.9, weather.PerceivedTemperature);

            Assert.Equal(0, weather.Precipitation);
            Assert.Equal(55, weather.RelativeHumidity);
            Assert.Equal(3, weather.SolarRadiation);
            Assert.Equal(13, weather.Temperature);
            Assert.Equal(307886400, weather.Timestamp);
            Assert.Equal(1, weather.WeatherType);

            Assert.Equal(296, weather.WindDirection);
            Assert.Equal(3.6, weather.WindSpeed);
        }

        [Fact]
        public void TestWeatherEventTable()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray

            var message = BinaryMessage.GenerateBinaryMessage(HeaderIdentifier.EventTableOfWeatherStates, demoData, null);

            Assert.NotNull(message);
            Assert.IsType<EventTableOfWeatherStates>(message);

            var co = (EventTableOfWeatherStates)message;

            Assert.Equal(2, co.Values.Count);
            Assert.Equal(1, co.Values.ToList()[0].Value.WeatherEntries.Count);

            Assert.Equal(95, co.Values.ToList()[1].Value.WeatherEntries.Count);
        }

        [Fact]
        public void TestDaytimerEntryParse()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray("00000000770100002805000000000000000000000000F03F");

            var entry = DaytimerEntry.Parse(demoData);
            Assert.NotNull(entry);

            Assert.Equal(375, entry.From);
            Assert.Equal(0, entry.Mode);
            Assert.Equal(0, entry.NeedActivate);
            Assert.Equal(1320, entry.To);
            Assert.Equal(1, entry.Value);
        }

        [Fact]
        public void TestDaytimerEntryParseFail1()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray("0000000000770100002805000000000000000000000000F03F");

            Assert.Throws<ArgumentException>(() => DaytimerEntry.Parse(demoData));
        }
        [Fact]
        public void TestDaytimerEntryParseFail2()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray("770100002805000000000000000000000000F03F");

            Assert.Throws<ArgumentException>(() => DaytimerEntry.Parse(demoData));
        }

        [Fact]
        public void TestDaytimerEventTable()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray("79FD79103D028E52FFFF9D8DC10F981000000000000000000B00000000000000770100002805000000000000000000000000F03F0B000000770100002805000000000000000000000000F03F02000000770100002805000000000000000000000000F03F0100000000000000A005000000000000000000000000084003000000770100002805000000000000000000000000F03F04000000770100002805000000000000000000000000F03F05000000770100002805000000000000000000000000F03F06000000770100002805000000000000000000000000F03F07000000770100002805000000000000000000000000F03F08000000770100006405000000000000000000000000F03F0900000077010000A005000000000000000000000000F03F79FD79103D028F52FFFF9D8DC10F981000000000000000000500000002000000E00100002905000000000000000000000000144000000000E00100002905000000000000000000000000144003000000000000003C000000000000000000000000000040070000002C0100002805000000000000000000000000004008000000E001000028050000000000000000000000000040");
            var message = BinaryMessage.GenerateBinaryMessage(HeaderIdentifier.EventTableOfDaytimerStates, demoData, null);

            Assert.IsType<EventTableOfDaytimerStates>(message);

            var co = (EventTableOfDaytimerStates)message;

            Assert.Equal(2, co.Values.Count);

            Assert.Equal(11, co.Values.ToList()[0].Value.DaytimerEntries.Count);
            Assert.Equal(0, co.Values.ToList()[0].Value.DefaultValue);

            Assert.Equal(5, co.Values.ToList()[1].Value.DaytimerEntries.Count);
            Assert.Equal(0, co.Values.ToList()[1].Value.DefaultValue);
        }

        [Fact]
        public void TestTextStateEventTable()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray

            var message = BinaryMessage.GenerateBinaryMessage(HeaderIdentifier.EventTableOfTextStates, demoData, null);

            Assert.IsType<EventTableOfTextStates>(message);

            var co = (EventTableOfTextStates)message;

            Assert.Equal(11, co.Values.Count);

            Assert.Equal("1,1,1,1,1,1,1,1", co.Values.ToList()[10].Value.Text);
        }


        [Fact]
        public void TestValueStateEventTable()
        {
            var demoData = Automatica.Core.Driver.Utility.Utils.StringToByteArray
            var message = BinaryMessage.GenerateBinaryMessage(HeaderIdentifier.EventTableOfValueStates, demoData, null);

            Assert.IsType<EventTableOfValueStates>(message);

            var co = (EventTableOfValueStates)message;

            Assert.Equal(117, co.Values.Count);

            Assert.Equal(6, co.Values.ToList()[0].Value);
            Assert.Equal(865.805, co.Values.ToList()[68].Value);
        }
    }
}
